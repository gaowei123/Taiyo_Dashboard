
@{
    ViewBag.Title = "LaserMachineActivityChart";
}

@*下拉框组件*@
@*<script src="~/Plugins/bootstrap-select-1.13.0/dist/js/bootstrap-select.min.js"></script>
<link href="~/Plugins/bootstrap-select-1.13.0/dist/css/bootstrap-select.min.css" rel="stylesheet" />*@


@*时间框组件*@
<script src="~/Plugins/bootstrap-datetimepicker-master/js/bootstrap-datetimepicker.js"></script>
<link href="~/Plugins/bootstrap-datetimepicker-master/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />


<div class="container">

    <div class="row titleRow">
        <img class="titleImg" src="~/Resources/Images/headericon.gif" />
        <span class="titleText">Machine Activity Analysis Chart</span>
    </div>


    <div class="row">
        <div class="col-md-12 panel panel-default searchingPanel" style="padding-top:10px;">
            <div class="row form-inline searchingBar ">
                <div class="col-md-3">
                    <label style="width:35%">Date From:</label>
                    <input type="text" class="form-control" id="txtDateFrom" CssClass="form-control formDateTimePicker" data-date-format="yyyy-mm-dd" placeholder="Please choose date" style="width:60%;" />
                </div>
                <div class="col-md-3">
                    <label style="width:35%">Date To:</label>
                    <input type="text" class="form-control" id="txtDateTo" CssClass="form-control formDateTimePicker" data-date-format="yyyy-mm-dd" placeholder="Please choose date" style="width:60%;" />
                </div>
                <div class="col-md-3">
                    <label style="width:35%">Shift:</label>
                    <select id="ddlShift" class="form-control" data-ng-style="btn-info" style="width:60%;">
                        <option value="">All</option>
                        <option value="Day">Day</option>
                        <option value="Night">Night</option>
                    </select>
                </div>
                <div class="col-md-3" align="right" style="padding-right:2%;">
                    <input type="button" class="btn btn-success" value="Generate" onclick="generateChartOption();" />
                </div>
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-md-12 panel panel-default" style="padding:0px; margin-top:10px;">
            <div id="divChart"></div>
        </div>
    </div>

</div>




<script src="~/plugins/incubator-echarts-master/dist/echarts.min.js"></script>

<script type="text/javascript">

    //初始化时间框
    $('#txtDateFrom').datetimepicker({
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0,
        initialDate: new Date()
    });
    $('#txtDateTo').datetimepicker({
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0,
        initialDate: new Date()
    });


    var apiGetChartData = window.globalConfig.rootDirectory + '/Charts/GetLaserActivityData';

    //初始化 echart
    var chart = echarts.init(document.getElementById('divChart'));

    var option;


    $(document).ready(function () {

        //设置默认查询时间
        var lastDay = getLastReportDay();
        var strLastDay = dateFormat('yyyy-MM-dd', lastDay);
        $('#txtDateFrom').val(strLastDay);
        $('#txtDateTo').val(strLastDay);


        generateChartOption();
    });


    function generateChartOption() {

        //ajax 请求后台数据
        $.ajax({
            type: "POST",
            dataType: "json",
            url: apiGetChartData,
            data: {
                DateFrom: $('#txtDateFrom').val(),
                DateTo: $('#txtDateTo').val(),
                Shift: $('#ddlShift').val()
            },

            beforeSend: function () {
                chart.showLoading();
            },

            success: function (data) {

                var series = [];
                for (var i = 0; i < data.SeriesData.length; i++) {
                    series.push({
                        name: data.SeriesData[i].Name,
                        type: data.SeriesData[i].Type,
                        stack: data.SeriesData[i].Stack,
                        data: data.SeriesData[i].Data,
                        label: {
                            show: true,
                            position: 'inside',
                            formatter: function (data) {
                                if (data.data === 0) {
                                    return '';
                                } else {
                                    return data.data;
                                }
                            },
                            color:'black'
                        },
                        itemStyle: {
                            color: function (para) {
                                if (para.seriesName == 'RUN') {
                                    return window.globalConfig.laserColor[0];
                                } else if (para.seriesName == 'SETUP') {
                                    return window.globalConfig.laserColor[1];
                                } else if (para.seriesName == 'BUYOFF') {
                                    return window.globalConfig.laserColor[2];
                                } else if (para.seriesName == 'TESTING') {
                                    return window.globalConfig.laserColor[3];
                                } else if (para.seriesName == 'NO SCHEDULE') {
                                    return window.globalConfig.laserColor[4];
                                }else if (para.seriesName == 'MAINTAINENCE') {
                                    return window.globalConfig.laserColor[5];
                                } else if (para.seriesName == 'BREAKDOWN') {
                                    return window.globalConfig.laserColor[6];
                                } else if (para.seriesName == 'SHUTDOWN') {
                                    return window.globalConfig.laserColor[7];
                                } else {
                                    return window.globalConfig.laserColor[7];
                                }                               
                            }
                        }
                    });
                }


                option = {
                    color: window.globalConfig.laserColor,
                    title: {
                        text: ''
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                            type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                        }
                    },
                    legend: {
                        data: data.LegendData                     
                    },
                    grid: {
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: [
                        {
                            type: 'category',
                            data: data.XAxisData
                        }
                    ],
                    yAxis: [
                        {
                            type: 'value'
                        }
                    ],
                    series: series
                };

                chart.setOption(option, true);
            },

            complete: function () {
                chart.hideLoading();
                chartResize(chart);
            },

            error: function () {
                alert('Catch error, get chart data fail!');
                chart.hideLoading();
            }
        });


    }




    $(window).resize(function () {chartResize(chart);});
    function chartResize(chart) {
        var bHeight = $(window).height() - 280;
        chart.resize({ height: bHeight });
    }


</script>