
@{
    ViewBag.Title = "Production Inventory";
}

<div class="container-fluid">

    <div class="row titleRow">
        <img class="titleImg" src="~/Resources/Images/headericon.gif" />
        <span class="titleText">Production Inventory</span>
    </div>


    <div class="row">
        <div class="col-sm-12 panel panel-default searchingPanel">
            <div class="row form-inline searchingBar ">
                <div class="col-sm-3">
                    <label for="ddlPartNo" style="width:35%;">Part No:</label>
                    <select id="ddlPartNo" class="form-control selectpicker" data-live-search="true" data-ng-style="btn-info"></select>
                </div>

                <div class="col-sm-3">
                    <label style="width:35%">Inventory:</label>
                    <select id="ddlShipTo" class="form-control" data-ng-style="btn-info" style="width:60%;"> 
                        <option value="">All</option>
                        <option value="FG">FG</option>
                        <option value="Assembly">Assembly</option>
                    </select>
                </div>
                <div class="col-sm-3">
                    <label for="txtDate" style="width:35%;">Date:</label>
                    <input type="text" class="form-control" id="txtDate" data-date-format="yyyy-mm-dd" placeholder="Please choose date" style="width:60%;" />
                </div>
                <div class="col-sm-3" align="right" style="padding-right:2%;">
                    <input type="button" class="btn btn-success" value="Generate" onclick="search();" />
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-sm-12" style="padding:0px;margin-top:-10px;">
            <table id="tableInventory" data-toggle="table"></table>
        </div>
    </div>


</div>




@*下拉框组件*@
<script src="~/Plugins/bootstrap-select-1.13.0/dist/js/bootstrap-select.min.js"></script>
<link href="~/Plugins/bootstrap-select-1.13.0/dist/css/bootstrap-select.min.css" rel="stylesheet" />

@*bootstrap table*@
<script src="~/plugins/bootstrap-table-1.15.3/dist/bootstrap-table.min.js"></script>
<link href="~/plugins/bootstrap-table-1.15.3/dist/bootstrap-table.min.css" rel="stylesheet" />

@*时间框组件*@
<script src="~/Plugins/bootstrap-datetimepicker-master/js/bootstrap-datetimepicker.js"></script>
<link href="~/Plugins/bootstrap-datetimepicker-master/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

<script type="text/javascript">

    var apiGetAllSectionIventoryReport = window.globalConfig.rootDirectory + '/OverallReport/GetAllSectionInventoryReport';


    $('#ddlPartNo').selectpicker({ width: 'calc(60%)' });
    
    $('#txtDate').datetimepicker({
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0,
        initialDate: new Date()
    });

    $(document).ready(function () {

        setPartNoDDL($('#ddlPartNo'), 'PQC');

        let date = new Date();
        $('#txtDate').val(dateFormat('yyyy-MM-dd', date))

        search();
    });


    function search() {
        //重新加载必须将原本table清空
        $('#tableInventory').bootstrapTable('destroy');

        $('#tableInventory').bootstrapTable({ // 对应table标签的id


            //call后台数据
            method: 'post',
            dataType: 'json',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            url: apiGetAllSectionIventoryReport,

            cache: false, // 设置为 false 禁用 AJAX 数据缓存， 默认为true

      
            queryParams: function (params) { 
                return {
                    SearchDay: $("#txtDate").val(),
                    PartNo: $("#ddlPartNo").val(),
                    ShipTo: $("#ddlShipTo").val()
                }
            },


            //表头样式 undefined, thead-light, thead-dark,
            theadClasses: 'thead-title',

            //表格样式
            classes: 'table table-bordered table-hover table-striped',


            striped: false,  //表格显示条纹，默认为false
            pagination: false, // 在表格底部显示分页组件，默认false
            //pageList: [10, 20], // 设置页面可以显示的数据条数
            //pageSize: 10, // 页面数据条数
            //pageNumber: 1, // 首页页码

            showFooter: true,   //显示合计栏


            height: $(window).height() - 190,


            rowStyle: function (row, index) {
                return {
                    //防止数据自动换行
                    css: { "overflow": "hidden", "text-overflow": "ellipsis", "white-space": "nowrap" }
                }
            },

            columns: [
            {
                field: 'Model',
                title: 'Model',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {                  
                    return "Total";
                }
            },
            {
                field: 'PartNumber',
                title: 'Part No',
                align: 'center',
                valign: 'middle'
            },
            {
                field: 'MaterialName',
                title: 'Material</br>Name',
                align: 'center',
                valign: 'middle'
            },
            { 
                field: 'Assembly',
                title: 'Assembly',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].Assembly != null) {
                            count += Number(value[i].Assembly);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'FG',
                title: 'FG',
                align: 'center',
                valign: 'middle',
                width: 80,
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].FG != null) {
                            count += Number(value[i].FG);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'AfterPacking',
                title: 'After</br>Packing',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].AfterPacking != null) {
                            count += Number(value[i].AfterPacking);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'BeforePacking',
                title: 'Before</br>Packing',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].BeforePacking != null) {
                            count += Number(value[i].BeforePacking);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'AfterWIP',
                title: 'After</br>WIP',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].AfterWIP != null) {
                            count += Number(value[i].AfterWIP);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'BeforeWIP',
                title: 'Before</br>WIP',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].BeforeWIP != null) {
                            count += Number(value[i].BeforeWIP);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'AfterLaser',
                title: 'After</br>Laser',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].AfterLaser != null) {
                            count += Number(value[i].AfterLaser);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'BeforeLaser',
                title: 'Before</br>Laser',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].BeforeLaser != null) {
                            count += Number(value[i].BeforeLaser);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'TCPaint',
                title: 'T/C</br>Paint',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].TCPaint != null) {
                            count += Number(value[i].TCPaint);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'MCPaint',
                title: 'M/C</br>Paint',
                align: 'center',
                valign: 'middle',
                visible: false,
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].MCPaint != null) {
                            count += Number(value[i].MCPaint);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'PrintSupplier',
                title: 'Print</br>Supplier',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].PrintSupplier != null) {
                            count += Number(value[i].PrintSupplier);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'UCPaint',
                title: 'U/C</br>Paint',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].UCPaint != null) {
                            count += Number(value[i].UCPaint);
                        }
                    }
                    return count;
                }
            },
            {
                field: 'PaintRawPart',
                title: 'Paint</br>Raw Part',
                align: 'center',
                valign: 'middle',
                footerFormatter: function (value) {
                    var count = 0;
                    for (var i in value) {
                        if (value[i].PaintRawPart != null) {
                            count += Number(value[i].PaintRawPart);
                        }
                    }
                    return count;
                }
            }],


            onLoadSuccess: function (data) {
                if (data ==undefined || data ==null||data.length==0) {
                    $('#tableInventory').bootstrapTable('resetView');
                }
            },

            onLoadError: function () {
                console.log("加载数据失败");
            }
        });
    }


    $(window).resize(function () {
        $('#tableInventory').bootstrapTable('resetView');
    });



</script>